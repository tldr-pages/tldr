name: Monthly check GitHub usernames in CODEOWNERS and MAINTAINERS.md

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 1 * *" # Run on the 1st of every month at midnight UTC

permissions:
  contents: read
  issues: write

jobs:
  check-usernames:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0

    # Extract GitHub @usernames from the CODEOWNERS and MAINTAINERS.md files
    # and convert them to GitHub API URLs for validation
    - name: Extract GitHub usernames for validation
      run: |
        {
          grep -oP         '@[\w-]+' .github/CODEOWNERS
          grep -oP '\*\*.+\K@[\w-]+' MAINTAINERS.md # Only get current maintainers (marked up in **bold**)
        } | sort -u | sed 's#@#https://api.github.com/users/#' > username_urls.txt

    - name: Validate GitHub usernames with the Lychee URL checker
      uses: lycheeverse/lychee-action@885c65f3dc543b57c898c8099f4e08c8afd178a2 # v2.6.1
      id: lychee # Step ID to reference later
      continue-on-error: true
      with:
        args: >-
          --verbose
          --no-progress
          --max-concurrency 25
          --output lychee_report.txt
          username_urls.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Find an existing username validation issue
      uses: micalevisk/last-issue-action@0d40124cc99ac8601c2516007f0c98ef3d27537b # v2.3.0
      id: last-issue # Step ID to reference later
      with:
        state: all
        labels: check usernames
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create or update username validation issue if there are errors
      if: steps.lychee.outcome == 'failure'
      uses: peter-evans/create-issue-from-file@fca9117c27cdc29c6c4db3b86c48e4115a786710 # v6.0.0
      with:
        title: GitHub usernames with errors
        content-filepath: lychee_report.txt
        issue-number: ${{ steps.last-issue.outputs.issue-number }}
        labels: check usernames

    - name: Close or reopen username validation issue as needed
      if: steps.last-issue.outputs.has-found == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [[ "${{ steps.lychee.outcome }}" == "success" ]]; then
          gh issue close ${{ steps.last-issue.outputs.issue-number }} --comment "All usernames are valid again. Closing this issue."
        else
          gh issue reopen ${{ steps.last-issue.outputs.issue-number }} --comment "Invalid usernames found. Reopening this issue."
        fi
